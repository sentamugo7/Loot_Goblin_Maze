Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
// This Baldur's Gate 3 mod will create a small maze and transport the
// player to the start of the maze. They can wander throught the maze and
// find random loot. When the player reaches the end of the maze,
// they are returned to their original spot.

//////////////////////////////////////////
// clear out variables
//
// framework variables
//// DB_SMG_LGM_VAR_CENTER((REAL)_X, (REAL)_Y, (REAL)_Z);
//// DB_SMG_LGM_VAR_DIMENSIONS((INTEGER)_ROW_SIZE, (INTEGER)_STORY_SIZE, (INTEGER)_COLUMN_SIZE);
//// DB_SMG_LGM_VAR_IN_MAZE_LEVEL((INTEGER)_IS_IN_LEVEL);
//// DB_SMG_LGM_VAR_LOOT_LEVEL((INTEGER)_LOOT_LEVEL);
//// DB_SMG_LGM_VAR_RETURN_POSITION((REAL)_X, (REAL)_Y, (REAL)_Z);
//// DB_SMG_LGM_VAR_RETURN_REGION((STRING)_REGION);
// design variables
//// DB_SMG_LGM_VAR_CHOSEN_CELL((INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_CURRENT_CELL((INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_MAZE_READY((INTEGER)_IS_READY);
//// DB_SMG_LGM_VAR_MAZE_STARTED((INTEGER)_IS_STARTED);
//// DB_SMG_LGM_VAR_PASSAGE((INTEGER)_ROW_1, (INTEGER)_COLUMN_1, (INTEGER)_ROW_2, (INTEGER)_COLUMN_2);
//// DB_SMG_LGM_VAR_STACK((INTEGER)_STACK_POINTER, (INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_STACK_POINTER((INTEGER)_STACK_POINTER);
//// DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELL_COUNT((INTEGER)_UNVISITED_NEIGHBOR_CELL_COUNT);
//// DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELLS((INTEGER)_INDEX, (INTEGER)_ROW, (INTEGER)__COLUMN);
//// DB_SMG_LGM_VAR_VISITED((INTEGER)_ROW, (INTEGER)__COLUMN);
//// DB_SMG_LGM_VAR_ROW_VALUES((INTEGER)_ROW);
//// DB_SMG_LGM_VAR_COLUMN_VALUES((INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_ADDON((INTEGER)_ROW, (INTEGER)_COLUMN, (STRING)_COMPASS_DIRECTION, (STRING)TYPE, (INTEGER)_ID);
// construct variables
//// DB_SMG_LGM_VAR_LAST_PLACED_PART((ITEM)_PART);
//// DB_SMG_LGM_VAR_PLACED_PARTS((ITEM)_PART);
//// DB_SMG_LGM_VAR_XZ_ADJUST((REAL)_ADJUST_DISTANCE);
// addon variables
//// DB_SMG_LGM_VAR_LEVER_OPENER((INTEGER)_ADDON_ID, (INTEGER)_OPEN_VALUE);
//// DB_SMG_LGM_VAR_LEVER_SETTINGS((INTEGER)_ADDON_ID, (INTEGER)_INDEX, (INTEGER)_IS_ON);
//// DB_SMG_LGM_VAR_LEVERS((INTEGER)_ADDON_ID, (INTEGER)_INDEX, (ITEM)_LEVER);
//// DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX((INTEGER)_ADDON_ID, (INTEGER)_CURRENT_SEQUENCE_INDEX);
//// DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX((INTEGER)_ADDON_ID, (INTEGER)_TABLE_INDEX);
//// DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE((INTEGER)_TABLE_INDEX, (INTEGER)_SEQUENCE_INDEX, (INTEGER)_BUTTON_INDEX);
//// DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX((INTEGER)_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX);
//// DB_SMG_LGM_VAR_PUZZLE_BUTTONS((INTEGER)_ADDON_ID, (INTEGER)_INDEX, (ITEM)_PUZZLE_BUTTON);
//// DB_SMG_LGM_VAR_PUZZLE_WALL((INTEGER)_ADDON_ID, (ITEM)_PUZZLE_WALL);
//// DB_SMG_LGM_VAR_SLIDING_DOOR((INTEGER)_ADDON_ID, (ITEM)_SLIDING_DOOR);
// critter variables
//// DB_SMG_LGM_VAR_CRITTER((GUIDSTRING)_CRITTER, (STRING)_SPEED, (INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_CRITTER_NEXT_CELL((GUIDSTRING)_CRITTER, (INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS((GUIDSTRING)_CRITTER, (INTEGER)_INDEX, (INTEGER)_ROW, (INTEGER)_COLUMN);
//// DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT((GUIDSTRING)_CRITTER, (INTEGER)_COUNT);
//// DB_SMG_LGM_VAR_CRITTER_PREV_CELL((GUIDSTRING)_CRITTER, (INTEGER)(INTEGER)_ROW, (INTEGER)_COLUMN);
// loot variables
//// DB_SMG_LGM_VAR_LOOT((INTEGER)_INDEX, (INTEGER)_COUNTER, (GUIDSTRING)_GUID);
//// DB_SMG_LGM_VAR_LOOT_COUNTER((INTEGER)_COUNTER);
//// DB_SMG_LGM_VAR_LOOT_INDEX((INTEGER)_INDEX);
//// DB_SMG_LGM_VAR_SELECTED_LOOT((GUIDSTRING)_GUID);

PROC
PROC_SMG_LGM_CLEAR_VARIABLES()
THEN
// framework variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CENTER();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_DIMENSIONS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_IN_MAZE_LEVEL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_LEVEL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_RETURN_POSITION();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_RETURN_REGION();
// design variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_ADDON();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CHOSEN_CELL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CURRENT_CELL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_MAZE_READY();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_MAZE_STARTED();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PASSAGE();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_STACK();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_STACK_POINTER();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELL_COUNT();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELLS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_VISITED();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_ROW_VALUES();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_COLUMN_VALUES();
// construct variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LAST_PLACED_PART();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PLACED_PARTS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_XZ_ADJUST();
// addon variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVER_OPENER();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVER_SETTINGS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVERS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTONS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_WALL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_SLIDING_DOOR();
//critter variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_PREV_CELL();
// loot variables
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_COUNTER();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_INDEX();
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_SELECTED_LOOT();

// framework variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CENTER()
AND
DB_SMG_LGM_VAR_CENTER(_X, _Y, _Z)
THEN
NOT DB_SMG_LGM_VAR_CENTER(_X, _Y, _Z);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_DIMENSIONS()
AND
DB_SMG_LGM_VAR_DIMENSIONS(_ROW_SIZE, _STORY_SIZE, _COLUMN_SIZE)
THEN
NOT DB_SMG_LGM_VAR_DIMENSIONS(_ROW_SIZE, _STORY_SIZE, _COLUMN_SIZE);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_IN_MAZE_LEVEL()
AND
DB_SMG_LGM_VAR_IN_MAZE_LEVEL(_IS_IN_LEVEL)
THEN
NOT DB_SMG_LGM_VAR_IN_MAZE_LEVEL(_IS_IN_LEVEL);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_LEVEL()
AND
DB_SMG_LGM_VAR_LOOT_LEVEL(_LOOT_LEVEL)
THEN
NOT DB_SMG_LGM_VAR_LOOT_LEVEL(_LOOT_LEVEL);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_RETURN_POSITION()
AND
DB_SMG_LGM_VAR_RETURN_POSITION(_X, _Y, _Z)
THEN
NOT DB_SMG_LGM_VAR_RETURN_POSITION(_X, _Y, _Z);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_RETURN_REGION()
AND
DB_SMG_LGM_VAR_RETURN_REGION(_REGION)
THEN
NOT DB_SMG_LGM_VAR_RETURN_REGION(_REGION);

// design variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_ADDON()
AND
DB_SMG_LGM_VAR_ADDON((INTEGER)_ROW, (INTEGER)_COLUMN, (STRING)_COMPASS_DIRECTION, (STRING)_TYPE, (INTEGER)_ID)
THEN
NOT DB_SMG_LGM_VAR_ADDON(_ROW, _COLUMN, _COMPASS_DIRECTION, _TYPE, _ID);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CHOSEN_CELL()
AND
DB_SMG_LGM_VAR_CHOSEN_CELL(_ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CHOSEN_CELL(_ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CURRENT_CELL()
AND
DB_SMG_LGM_VAR_CURRENT_CELL(_ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CURRENT_CELL(_ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_MAZE_READY()
AND
DB_SMG_LGM_VAR_MAZE_READY(_IS_READY)
THEN
NOT DB_SMG_LGM_VAR_MAZE_READY(_IS_READY);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_MAZE_STARTED()
AND
DB_SMG_LGM_VAR_MAZE_STARTED(_IS_STARTED)
THEN
NOT DB_SMG_LGM_VAR_MAZE_STARTED(_IS_STARTED);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PASSAGE()
AND
DB_SMG_LGM_VAR_PASSAGE(_X1, _Z1, _X2, _Z2)
THEN
NOT DB_SMG_LGM_VAR_PASSAGE(_X1, _Z1, _X2, _Z2);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_STACK()
AND
DB_SMG_LGM_VAR_STACK(_STACK_POINTER, _ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_STACK(_STACK_POINTER, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_STACK_POINTER()
AND
DB_SMG_LGM_VAR_STACK_POINTER(_STACK_POINTER)
THEN
NOT DB_SMG_LGM_VAR_STACK_POINTER(_STACK_POINTER);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELL_COUNT()
AND
DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELL_COUNT(_UNVISITED_NEIGHBOR_CELL_COUNT)
THEN
NOT DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELL_COUNT(_UNVISITED_NEIGHBOR_CELL_COUNT);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELLS()
AND
DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELLS(_INDEX, _ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_UNVISITED_NEIGHBOR_CELLS(_INDEX, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_VISITED()
AND
DB_SMG_LGM_VAR_VISITED(_ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_VISITED(_ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_ROW_VALUES()
AND
DB_SMG_LGM_VAR_ROW_VALUES((INTEGER)_ROW)
THEN
NOT DB_SMG_LGM_VAR_ROW_VALUES(_ROW);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_COLUMN_VALUES()
AND
DB_SMG_LGM_VAR_COLUMN_VALUES((INTEGER)_COLUMN)
THEN
NOT DB_SMG_LGM_VAR_COLUMN_VALUES(_COLUMN);

// construct variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LAST_PLACED_PART()
AND
DB_SMG_LGM_VAR_LAST_PLACED_PART((ITEM)_PART)
THEN
NOT DB_SMG_LGM_VAR_LAST_PLACED_PART(_PART);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PLACED_PARTS()
AND
DB_SGM_LGM_PLACED_PARTS(_PART)
THEN
RequestDelete((ITEM)_PART);
NOT DB_SGM_LGM_PLACED_PARTS(_PART);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_XZ_ADJUST()
AND
DB_SMG_LGM_VAR_XZ_ADJUST((REAL)_ADJUST_DISTANCE)
THEN
NOT DB_SMG_LGM_VAR_XZ_ADJUST(_ADJUST_DISTANCE);

// addon variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVER_OPENER()
AND
DB_SMG_LGM_VAR_LEVER_OPENER((INTEGER)_ADDON_ID, (INTEGER)_OPEN_VALUE)
THEN
NOT DB_SMG_LGM_VAR_LEVER_OPENER(_ADDON_ID, _OPEN_VALUE);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVER_SETTINGS()
AND
DB_SMG_LGM_VAR_LEVER_SETTINGS((INTEGER)_ADDON_ID, (INTEGER)_INDEX, (INTEGER)_IS_ON)
THEN
NOT DB_SMG_LGM_VAR_LEVER_SETTINGS(_ADDON_ID, _INDEX, _IS_ON);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LEVERS()
AND
DB_SMG_LGM_VAR_LEVERS((INTEGER)_ADDON_ID, (INTEGER)_INDEX, (ITEM)_PART)
THEN
NOT DB_SMG_LGM_VAR_LEVERS(_ADDON_ID, _INDEX, _PART);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX()
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX(_ADDON_ID, _CURRENT_SEQUENCE_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX(_ADDON_ID, _CURRENT_SEQUENCE_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX((INTEGER)_ADDON_ID)
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX(_ADDON_ID, (INTEGER)_SEQUENCE_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_CURRENT_SEQUENCE_INDEX(_ADDON_ID, _SEQUENCE_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX()
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX((INTEGER)_ADDON_ID, (INTEGER)_TABLE_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX(_ADDON_ID, _TABLE_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX((INTEGER)_ADDON_ID)
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX((INTEGER)_ADDON_ID, (INTEGER)_TABLE_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_INDEX(_ADDON_ID, _TABLE_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE()
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE(_TABLE_INDEX, _SEQUENCE_INDEX, _BUTTON_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE(_TABLE_INDEX, _SEQUENCE_INDEX, _BUTTON_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX()
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX((INTEGER)_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX(_PUZZLE_BUTTON_OPENER_TABLE_LOOP_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_BUTTONS()
AND
DB_SMG_LGM_VAR_PUZZLE_BUTTONS(_ADDON_ID, _INDEX, _PUZZLE_BUTTON)
THEN
NOT DB_SMG_LGM_VAR_PUZZLE_BUTTONS(_ADDON_ID, _INDEX, _PUZZLE_BUTTON);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_PUZZLE_WALL()
AND
DB_SMG_LGM_VAR_PUZZLE_WALL(_ADDON_ID, _PUZZLE_WALL)
THEN NOT DB_SMG_LGM_VAR_PUZZLE_WALL(_ADDON_ID, _PUZZLE_WALL);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_SLIDING_DOOR()
AND
DB_SMG_LGM_VAR_SLIDING_DOOR((INTEGER)_ADDON_ID, (ITEM)_PART)
THEN
NOT DB_SMG_LGM_VAR_SLIDING_DOOR(_ADDON_ID, _PART);

// critter variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER()
AND
DB_SMG_LGM_VAR_CRITTER((GUIDSTRING)_CRITTER, (STRING)_SPEED, (INTEGER)_ROW, (INTEGER)_COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER(_CRITTER, _SPEED, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL()
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELL((GUIDSTRING)_CRITTER, (INTEGER)_ROW, (INTEGER)_COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELL(_CRITTER, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS()
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS((GUIDSTRING)_CRITTER, (INTEGER)_INDEX, (INTEGER)_ROW, (INTEGER)_COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS(_CRITTER, _INDEX, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT()
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT((GUIDSTRING)_CRITTER, (INTEGER)_COUNT)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT(_CRITTER, _COUNT);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_PREV_CELL()
AND
DB_SMG_LGM_VAR_CRITTER_PREV_CELL((GUIDSTRING)_CRITTER, (INTEGER)_ROW, (INTEGER)_COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_PREV_CELL(_CRITTER, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL((GUIDSTRING)_CRITTER)
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELL(_CRITTER, _ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELL(_CRITTER, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS((GUIDSTRING)_CRITTER)
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS(_CRITTER, _INDEX, _ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELLS(_CRITTER, _INDEX, _ROW, _COLUMN);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT((GUIDSTRING)_CRITTER)
AND
DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT(_CRITTER, _COUNT)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_NEXT_CELL_COUNT(_CRITTER, _COUNT);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_CRITTER_PREV_CELL((GUIDSTRING)_CRITTER)
AND
DB_SMG_LGM_VAR_CRITTER_PREV_CELL(_CRITTER, _ROW, _COLUMN)
THEN
NOT DB_SMG_LGM_VAR_CRITTER_PREV_CELL(_CRITTER, _ROW, _COLUMN);

// loot variables
PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT()
AND
DB_SMG_LGM_VAR_LOOT(_INDEX, _COUNTER, _GUID)
THEN
NOT DB_SMG_LGM_VAR_LOOT(_INDEX, _COUNTER, _GUID);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_COUNTER()
AND
DB_SMG_LGM_VAR_LOOT_COUNTER((INTEGER)_COUNTER)
THEN
NOT DB_SMG_LGM_VAR_LOOT_COUNTER(_COUNTER);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_LOOT_INDEX()
AND
DB_SMG_LGM_VAR_LOOT_INDEX((INTEGER)_INDEX)
THEN
NOT DB_SMG_LGM_VAR_LOOT_INDEX(_INDEX);

PROC
PROC_SMG_LGM_CLEAR_DB_SMG_LGM_VAR_SELECTED_LOOT()
AND
DB_SMG_LGM_VAR_SELECTED_LOOT(_GUID)
THEN
NOT DB_SMG_LGM_VAR_SELECTED_LOOT(_GUID);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
